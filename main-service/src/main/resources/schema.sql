DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    email VARCHAR UNIQUE,
    name VARCHAR
);

CREATE TABLE IF NOT EXISTS category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(255) UNIQUE
);

CREATE TABLE IF NOT EXISTS location (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    lat FLOAT,
    lon FLOAT
);

CREATE TABLE IF NOT EXISTS event (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    annotation VARCHAR,
    category_id BIGINT,
    confirmed_requests INTEGER,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description VARCHAR,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id BIGINT,
    location_id BIGINT,
    paid BOOLEAN,
    participant_limit INTEGER,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state VARCHAR,
    title VARCHAR,
    views INTEGER
);

CREATE TABLE IF NOT EXISTS request (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id BIGINT,
    requester_id BIGINT,
    status VARCHAR,
    CONSTRAINT UC_request UNIQUE (event_id,requester_id)
);

CREATE TABLE IF NOT EXISTS compilation (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    pinned BOOLEAN,
    title VARCHAR
);

CREATE TABLE IF NOT EXISTS compilations_event (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    compilation_id BIGINT,
    event_id BIGINT
);

CREATE TABLE IF NOT EXISTS comment (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    text VARCHAR,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    commenter_id BIGINT,
    event_id BIGINT,
    state VARCHAR
);

ALTER TABLE event ADD FOREIGN KEY (category_id) REFERENCES category (id);
ALTER TABLE event ADD FOREIGN KEY (initiator_id) REFERENCES users (id);
ALTER TABLE event ADD FOREIGN KEY (location_id) REFERENCES location (id);
ALTER TABLE request ADD FOREIGN KEY (event_id) REFERENCES event (id);
ALTER TABLE request ADD FOREIGN KEY (requester_id) REFERENCES users (id);
ALTER TABLE compilations_event ADD FOREIGN KEY (compilation_id) REFERENCES compilation (id);
ALTER TABLE compilations_event ADD FOREIGN KEY (event_id) REFERENCES event (id);